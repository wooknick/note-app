{"version":3,"sources":["Components/plus.svg","fragments.js","queries.js","Routes/Notes/Notes.js","Routes/Notes/index.js","Routes/Note/Note.js","Routes/Note/index.js","Components/Editor/Editor.js","Components/Editor/index.js","Routes/Add/Add.js","Routes/Add/index.js","Routes/Edit/Edit.js","Routes/Edit/index.js","Components/App/App.js","offline.js","clientState.js","apollo.js","globalStyles.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","plus_ref2","react_default","a","createElement","d","plus_SvgPlus","_ref","svgRef","props","width","height","viewBox","ref","ForwardRef","forwardRef","__webpack_require__","p","NOTE_FRAGMENT","gql","_templateObject","GET_NOTES","queries_templateObject","GET_NOTE","_templateObject2","Header","styled","div","Notes_templateObject","Title","h1","Notes_templateObject2","Button","_templateObject3","Subtitle","h2","_templateObject4","Notes","_templateObject5","Note","_templateObject6","NoteTitle","span","_templateObject7","NotesContainer","Fragment","react_router_dom","to","react_apollo_esm","query","data","notes","map","note","concat","id","Notes_Note","title","React","Component","TitleComponent","Note_templateObject","Note_templateObject2","button","Note_templateObject3","match","params","variables","Note_Title","Note_Button","dist_default","markdown","content","TitleInput","TextareaAutosize","Editor_templateObject","ContentPreview","Editor_templateObject2","ContentInput","Editor_templateObject3","TitleContainer","Editor_templateObject4","Editor_templateObject5","Editor","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","_onInputChange","event","_event$target","value","name","setState","defineProperty","_onSave","onSave","_this$state","state","_this$state2","onChange","placeholder","Editor_Button","onClick","className","ADD_NOTE","Add_templateObject","Add","push","history","createNote","_this2","mutation","Components_Editor","EDIT_NOTE","Edit_templateObject","Edit","editNote","App","react_router","exact","path","component","saveNotes","cache","readQuery","jsonNotes","JSON","stringify","localStorage","setItem","error","console","log","defaults","getItem","parse","restoreNotes","resolvers","Query","_","config","dataIdFromObject","__typename","readFragment","fragment","Mutation","_ref2","newNote","writeData","toConsumableArray","_ref3","_ref4","noteId","updatedNote","objectSpread","writeFragment","InMemoryCache","stateLink","withClientState","typeDefs","client","ApolloClient","link","ApolloLink","from","GlobalStyle","createGlobalStyle","globalStyles_templateObject","ReactDOM","render","globalStyles","Components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.08a80323.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z\"\n});\n\nvar SvgPlus = function SvgPlus(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgPlus, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/plus.bd3dbbb8.svg\";\nexport { ForwardRef as ReactComponent };","import gql from \"graphql-tag\";\n\nexport const NOTE_FRAGMENT = gql`\n    fragment NoteParts on Note {\n        id\n        title\n        content\n    }\n`;\n","import gql from \"graphql-tag\";\nimport { NOTE_FRAGMENT } from \"./fragments\";\n\nexport const GET_NOTES = gql`\n    {\n        notes @client {\n            ...NoteParts\n        }\n    }\n    ${NOTE_FRAGMENT}\n`;\n\nexport const GET_NOTE = gql`\n    query getNote($id: Int!) {\n        note(id: $id) @client {\n            ...NoteParts\n        }\n    }\n    ${NOTE_FRAGMENT}\n`;\n","import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { Link } from \"react-router-dom\";\nimport { ReactComponent as Plus } from \"../../Components/plus.svg\";\nimport styled from \"styled-components\";\nimport { GET_NOTES } from \"../../queries\";\n\nconst Header = styled.div`\n    margin-bottom: 50px;\n`;\n\nconst Title = styled.h1`\n    font-size: 50px;\n    font-weight: 600;\n    margin: 0;\n    margin-bottom: 30px;\n    display: flex;\n    align-items: center;\n`;\n\nconst Button = styled.div`\n    margin-left: 10px;\n    transform: scale(0.8);\n    background-color: #eee;\n    display: flex;\n    align-items: center;\n    padding: 10px;\n    border-radius: 10px;\n    cursor: pointer;\n`;\n\nconst Subtitle = styled.h2`\n    color: #a2a19e;\n    font-weight: 400;\n`;\n\nconst Notes = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n`;\n\nconst Note = styled.div`\n    padding: 10px;\n    padding-left: 5px;\n    transition: background-color 0.1s linear;\n    cursor: pointer;\n    border-radius: 5px;\n    margin-bottom: 10px;\n    &:hover {\n        background-color: #eeeeee;\n    }\n`;\n\nconst NoteTitle = styled.span`\n    padding-bottom: 5px;\n    font-weight: 600;\n    font-size: 20px;\n`;\n\nexport default class NotesContainer extends React.Component {\n    render() {\n        return (\n            <>\n                <Header>\n                    <Title>\n                        Note-App\n                        <Link to={\"/add\"}>\n                            <Button>\n                                <Plus />\n                            </Button>\n                        </Link>\n                    </Title>\n                    <Subtitle>This is offline Note App supports Markdown.</Subtitle>\n                </Header>\n                <Notes>\n                    <Query query={GET_NOTES}>\n                        {({ data }) =>\n                            data.notes\n                                ? data.notes.map(note => (\n                                      <Link to={`/note/${note.id}`} key={note.id}>\n                                          <Note>\n                                              <NoteTitle>{note.title}</NoteTitle>\n                                          </Note>\n                                      </Link>\n                                  ))\n                                : null\n                        }\n                    </Query>\n                </Notes>\n            </>\n        );\n    }\n}\n","import NotesContainer from \"./Notes\";\nexport default NotesContainer;\n","import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport MarkdownRenderer from \"react-markdown-renderer\";\nimport { GET_NOTE } from \"../../queries\";\n\nconst TitleComponent = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 50px;\n`;\n\nconst Title = styled.h1`\n    font-size: 50px;\n    margin: 0;\n    padding: 0;\n`;\n\nconst Button = styled.button``;\n\nexport default class Note extends React.Component {\n    render() {\n        const {\n            match: {\n                params: { id }\n            }\n        } = this.props;\n        return (\n            <Query query={GET_NOTE} variables={{ id }}>\n                {({ data }) =>\n                    data.note ? (\n                        <>\n                            <TitleComponent>\n                                <Title>{data.note && data.note.title}</Title>\n                                <Link to={`/edit/${data.note.id}`}>\n                                    <Button>Edit</Button>\n                                </Link>\n                            </TitleComponent>\n                            <MarkdownRenderer markdown={data.note.content} />\n                        </>\n                    ) : null\n                }\n            </Query>\n        );\n    }\n}\n","import Note from \"./Note\";\nexport default Note;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport MarkdownRenderer from \"react-markdown-renderer\";\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nconst TitleInput = styled(TextareaAutosize)`\n    font-size: 50px;\n    font-weight: 600;\n    width: 100%;\n    &::placeholder {\n        font-weight: 600;\n    }\n`;\n\nconst ContentPreview = styled.div`\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-gap: 50px;\n`;\n\nconst ContentInput = styled(TextareaAutosize)`\n    font-size: 18px;\n    margin-top: 15px;\n`;\n\nconst TitleContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 50px;\n`;\n\nconst Button = styled.button``;\n\nexport default class Editor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: props.title || \"\",\n            content: props.content || \"\",\n            id: props.id || null\n        };\n    }\n    render() {\n        const { title, content } = this.state;\n        return (\n            <>\n                <TitleContainer>\n                    <TitleInput\n                        value={title}\n                        onChange={this._onInputChange}\n                        placeholder={\"Untitled...\"}\n                        name={\"title\"}\n                    />\n                    <Button onClick={this._onSave}>Save</Button>\n                </TitleContainer>\n                <ContentPreview>\n                    <ContentInput\n                        value={content}\n                        onChange={this._onInputChange}\n                        placeholder={\"# This supports markdown!\"}\n                        name={\"content\"}\n                    />\n                    <MarkdownRenderer markdown={content} className={\"markdown\"} />\n                </ContentPreview>\n            </>\n        );\n    }\n    _onInputChange = event => {\n        const {\n            target: { value, name }\n        } = event;\n        this.setState({\n            [name]: value\n        });\n    };\n    _onSave = () => {\n        const { onSave } = this.props;\n        const { title, content, id } = this.state;\n        onSave(title, content, id);\n    };\n}\n","import Editor from \"./Editor\";\nexport default Editor;\n","import React from \"react\";\nimport gql from \"graphql-tag\";\nimport Editor from \"../../Components/Editor\";\nimport { Mutation } from \"react-apollo\";\n\nconst ADD_NOTE = gql`\n    mutation createNote($title: String!, $content: String!) @client {\n        createNote(title: $title, content: $content) {\n            id\n        }\n    }\n`;\n\nexport default class Edit extends React.Component {\n    render() {\n        return (\n            <Mutation mutation={ADD_NOTE}>\n                {createNote => {\n                    this.createNote = createNote;\n                    return <Editor onSave={this._onSave} />;\n                }}\n            </Mutation>\n        );\n    }\n    _onSave = (title, content) => {\n        const {\n            history: { push }\n        } = this.props;\n        if (title !== \"\" && content !== \"\") {\n            this.createNote({ variables: { title, content } });\n            push(\"/\");\n        }\n    };\n}\n","import Add from \"./Add\";\nexport default Add;\n","import React from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport { GET_NOTE } from \"../../queries\";\nimport Editor from \"../../Components/Editor\";\nimport gql from \"graphql-tag\";\n\nexport const EDIT_NOTE = gql`\n    mutation updateNote($id: Int!, $title: String!, $content: String!) @client {\n        editNote(id: $id, title: $title, content: $content) {\n            id\n        }\n    }\n`;\n\nexport default class Edit extends React.Component {\n    render() {\n        const {\n            match: {\n                params: { id }\n            }\n        } = this.props;\n\n        return (\n            <Query query={GET_NOTE} variables={{ id }}>\n                {({ data }) =>\n                    data.note ? (\n                        <Mutation mutation={EDIT_NOTE}>\n                            {editNote => {\n                                this.editNote = editNote;\n                                return (\n                                    <Editor\n                                        title={data.note.title}\n                                        content={data.note.content}\n                                        id={data.note.id}\n                                        onSave={this._onSave}\n                                    />\n                                );\n                            }}\n                        </Mutation>\n                    ) : null\n                }\n            </Query>\n        );\n    }\n    _onSave = (title, content, id) => {\n        const {\n            history: { push }\n        } = this.props;\n        if (title !== \"\" && content !== \"\" && id) {\n            this.editNote({ variables: { title, content, id } });\n            push(`/note/${id}`);\n        }\n    };\n}\n","import Edit from \"./Edit\";\nexport default Edit;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport NotesContainer from \"../../Routes/Notes\";\nimport Note from \"../../Routes/Note\";\nimport Add from \"../../Routes/Add\";\nimport Edit from \"../../Routes/Edit\";\n\nclass App extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route exact={true} path={\"/\"} component={NotesContainer} />\n                    <Route path={\"/add\"} component={Add} />\n                    <Route path={\"/note/:id\"} component={Note} />\n                    <Route path={\"/edit/:id\"} component={Edit} />\n                </Switch>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","import { GET_NOTES } from \"./queries\";\n\nexport const saveNotes = cache => {\n    const { notes } = cache.readQuery({ query: GET_NOTES });\n    const jsonNotes = JSON.stringify(notes);\n    try {\n        localStorage.setItem(\"notes\", jsonNotes);\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const restoreNotes = () => {\n    const notes = localStorage.getItem(\"notes\");\n    if (notes) {\n        try {\n            const parsedNotes = JSON.parse(notes);\n            return parsedNotes;\n        } catch (error) {\n            console.log(error);\n            return [];\n        }\n    }\n    return [];\n};\n","import { NOTE_FRAGMENT } from \"./fragments\";\nimport { GET_NOTES } from \"./queries\";\nimport { saveNotes, restoreNotes } from \"./offline\";\n\nexport const defaults = {\n    notes: restoreNotes()\n};\nexport const typeDefs = [\n    `\n    schema{\n        query: Query\n        mutation: Mutation\n    }\n    type Query{\n        notes: [Note]!\n        note(id: Int!): Note\n    }\n    type Mutation{\n        createNote(title: String!, content: String!): Note\n        editNote(id: Int!, title: String, content:String): Note\n    }\n    type Note{\n        id: Int!\n        title: String!\n        content: String!\n    }\n    `\n];\nexport const resolvers = {\n    Query: {\n        note: (_, variables, { cache }) => {\n            const id = cache.config.dataIdFromObject({\n                __typename: \"Note\",\n                id: variables.id\n            });\n            const note = cache.readFragment({ fragment: NOTE_FRAGMENT, id });\n\n            return note;\n        }\n    },\n    Mutation: {\n        createNote: (_, variables, { cache }) => {\n            const { notes } = cache.readQuery({ query: GET_NOTES });\n            const { title, content } = variables;\n            const newNote = {\n                __typename: \"Note\",\n                title,\n                content,\n                id: notes.length + 1\n            };\n            cache.writeData({\n                data: {\n                    notes: [newNote, ...notes]\n                }\n            });\n            saveNotes(cache);\n            return newNote;\n        },\n        editNote: (_, { id, title, content }, { cache }) => {\n            const noteId = cache.config.dataIdFromObject({\n                __typename: \"Note\",\n                id\n            });\n            const note = cache.readFragment({ fragment: NOTE_FRAGMENT, id: noteId });\n            console.log(note);\n            const updatedNote = {\n                ...note,\n                title,\n                content\n            };\n            cache.writeFragment({\n                id: noteId,\n                fragment: NOTE_FRAGMENT,\n                data: updatedNote\n            });\n            saveNotes(cache);\n            return updatedNote;\n        }\n    }\n};\n","import ApolloClient from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { withClientState } from \"apollo-link-state\";\nimport { ApolloLink } from \"apollo-link\";\n\nimport { typeDefs, defaults, resolvers } from \"./clientState\";\nconst cache = new InMemoryCache();\n\nconst stateLink = withClientState({\n    cache,\n    typeDefs,\n    defaults,\n    resolvers\n});\n\nconst client = new ApolloClient({\n    cache,\n    link: ApolloLink.from([stateLink])\n});\n\nexport default client;\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n\t    :root {\n\t        --greyColor: #A2A19E;\n\t        --blackColor: #373630;\n\t    }\n\t    body{\n\t        background-color:#F7F5F3;\n\t        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n\t        color:var(--blackColor);\n\t        padding:50px 100px;\n\t        margin:0;\n\t    }\n\t    #root{\n\t        max-width:1000px;\n\t        width:100%;\n\t        margin:0 auto;\n\t    }\n\t    a {\n\t        color:inherit;\n\t        text-decoration:none;\n\t    }\n\t    div{\n\t        margin:0;\n\t    }\n\t    input,\n\t    textarea{\n\t        appearance:none;\n\t        border:none;\n\t        background-color:transparent;\n\t        resize:none;\n\t        &::placeholder {\n\t            color: #E7E7E6;\n\t        }\n\t        &:focus,\n\t        &:active{\n\t            outline:none;\n\t        }\n\t    }\n\t    .markdown a{\n\t        text-decoration:underline;\n\t    }\n\t    button{\n\t        appearance:none;\n\t        border:none;\n\t        background-color:transparent;\n\t        font-weight:600;\n\t        font-size:15px;\n\t        cursor:pointer;\n\t        border:2.5px solid var(--blackColor);\n\t        &:focus,\n\t        &:active{\n\t            outline:none\n\t        }\n\t\n\t    }\n\t`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App/App\";\nimport { ApolloProvider } from \"react-apollo\";\nimport client from \"./apollo\";\nimport GlobalStyle from \"./globalStyles\";\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <GlobalStyle />\n        <App />\n    </ApolloProvider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}